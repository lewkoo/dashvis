name: Publish release

on:
  push:
    branches:    
      - 'main'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install dependencies
        run: npm ci
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: python -m pip install build

      - name: Install Python dependencies
        run: python -m pip install -r requirements.txt

      - name: Build dashvis
        run: npm run build

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}

      - name: Build dashvis package
        run: python -m build --sdist --wheel --outdir dist/

      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish distribution ðŸ“¦ to PyPI
        if: startsWith(github.ref, 'refs/heads/main')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Create GitHub release
        id: create-release
        if: startsWith(github.ref, 'refs/heads/main')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package-version.outputs.current-version }}
          release_name: Release ${{ steps.package-version.outputs.current-version }}
          body: ${{ github.event.head_commit.message }}
          prerelease: false